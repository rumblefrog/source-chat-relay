sudo: false

language: go

env:
  - SMVERSION=1.10
  - SMVERSION=1.11

go:
  - "1.13.x"

matrix:
    fast_finish: true

cache:
  directories:
    - $HOME/.cache/go-build
    - $HOME/gopath/pkg/mod
    - yarn

addons:
    apt_packages:
      - lib32stdc++6
      - p7zip

before_install:
    - nvm install 13
    - curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | sudo apt-key add -
    - echo "deb https://dl.yarnpkg.com/debian/ stable main" | sudo tee /etc/apt/sources.list.d/yarn.list
    - sudo apt-get update && sudo apt-get install yarn -y
    - yarn global add postcss-cli
    - export SCRVER=$(git describe --always --long --dirty)
    - envsubst < client/SCR-Version.inc > client/SCR-Version.inc.temp && mv client/SCR-Version.inc.temp client/SCR-Version.inc

install:
    - SMLATEST=`curl -s "https://www.sourcemod.net/smdrop/$SMVERSION/sourcemod-latest-linux"`
    - SMPACKAGE="https://www.sourcemod.net/smdrop/$SMVERSION/$SMLATEST"
    - wget $SMPACKAGE
    - tar -xzf $(basename "$SMPACKAGE")
    - cp -r client/* addons/sourcemod/scripting/
    - wget https://raw.githubusercontent.com/nefarius/sm-ext-socket/master/socket.inc -P addons/sourcemod/scripting/include/
    - wget https://raw.githubusercontent.com/rumblefrog/SM-ByteBuffer-Inc/master/bytebuffer.inc -P addons/sourcemod/scripting/include/
    - wget https://www.doctormckay.com/download/scripting/include/morecolors.inc -P addons/sourcemod/scripting/include/
    - curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
    - go get -u github.com/gobuffalo/packr/v2/packr2
    - wget https://github.com/upx/upx/releases/download/v3.95/upx-3.95-amd64_linux.tar.xz
    - tar -xf upx-3.95-amd64_linux.tar.xz
    - mv upx-3.95-amd64_linux/upx $TRAVIS_BUILD_DIR/upx

before_script:
    - chmod +x addons/sourcemod/scripting/spcomp
    - mkdir -p build/game_server/addons/sourcemod/plugins
    - mkdir -p build/scr-linux-amd64/relay_server/
    - mkdir -p build/scr-arm-v7/relay_server/
    - mkdir -p build/scr-windows-amd64/relay_server/

script:
    - cd server/ui/template && yarn
    - postcss styles.css -o dist/styles.css
    - cp index.html dist/index.html
    - cd $TRAVIS_BUILD_DIR

    - export CGO_ENABLED=0
    - go get -u ./server
    - cd server && packr2 && cd $TRAVIS_BUILD_DIR

    - go build -ldflags "-s -w -X github.com/rumblefrog/source-chat-relay/server/config.SCRVER=$SCRVER -extldflags '-static'" -o build/scr-linux-amd64/relay_server/server ./server
    - export GOARCH=arm && export GOARM=7 && go build -ldflags "-s -w -X github.com/rumblefrog/source-chat-relay/server/config.SCRVER=$SCRVER  -extldflags '-static'" -o build/scr-arm-v7/relay_server/server ./server
    - export GOARCH=amd64 && export GOOS=windows && go get -d ./server && go build -ldflags "-s -w -X github.com/rumblefrog/source-chat-relay/server/config.SCRVER=$SCRVER  -extldflags '-static'" -o build/scr-windows-amd64/relay_server/server.exe ./server
    
    - cd addons/sourcemod/scripting/
    
    - ./spcomp Source-Chat-Relay.sp -o $TRAVIS_BUILD_DIR/build/game_server/addons/sourcemod/plugins/Source-Chat-Relay.smx

    - ./spcomp tests/event_test.sp
    - ./spcomp tests/forward_test.sp
    - ./spcomp tests/service_test.sp

    - cd $TRAVIS_BUILD_DIR
    
    - cp server/config.toml.example build/scr-linux-amd64/relay_server
    - cp -R build/game_server build/scr-linux-amd64/

    - cp server/config.toml.example build/scr-arm-v7/relay_server
    - cp -R build/game_server build/scr-arm-v7/

    - cp server/config.toml.example build/scr-windows-amd64/relay_server
    - cp -R build/game_server build/scr-windows-amd64/

    - cd docs && yarn && yarn gatsby build --prefix-paths && cd $TRAVIS_BUILD_DIR

before_deploy:
  - >
    if ! [ "$BEFORE_DEPLOY_RUN" ]; then
      export BEFORE_DEPLOY_RUN=1;

      ./upx --brute build/scr-linux-amd64/relay_server/server
      ./upx --brute build/scr-arm-v7/relay_server/server
      ./upx --brute build/scr-windows-amd64/relay_server/server.exe

      cd $TRAVIS_BUILD_DIR/build/scr-linux-amd64/ && tar -czf $TRAVIS_BUILD_DIR/scr-linux-amd64-$SCRVER.tar.gz *
      cd $TRAVIS_BUILD_DIR/build/scr-arm-v7/ && tar -czf $TRAVIS_BUILD_DIR/scr-arm-v7-$SCRVER.tar.gz *
      cd $TRAVIS_BUILD_DIR/build/scr-windows-amd64/ && 7zr a $TRAVIS_BUILD_DIR/scr-windows-amd64-$SCRVER.7z *

      cd $TRAVIS_BUILD_DIR
    fi

deploy:
    - provider: releases
      api_key: $githubkey
      file:
          - $TRAVIS_BUILD_DIR/scr-linux-amd64-$SCRVER.tar.gz
          - $TRAVIS_BUILD_DIR/scr-arm-v7-$SCRVER.tar.gz
          - $TRAVIS_BUILD_DIR/scr-windows-amd64-$SCRVER.7z
      skip_cleanup: true
      on:
        tags: true
    - provider: pages
      github_token: $githubkey
      local_dir: docs/public
      skip_cleanup: true
      keep_history: true
      on:
        branch: master
